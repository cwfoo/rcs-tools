#! /bin/sh
# rcstag - assign a symbolic revision number to checked out files.
#
# Copyright (C) 2010-2020 Thien-Thi Nguyen
# Copyright (C) 2021 Foo Chuan Wei
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
##
# Usage: rcstag [symbolic-name]
#
#       The idea is to run rcstag each time there is a new revision in any
#       of the files in the directory. A unique symbolic revision number
#       (V_[number], where number is increased each time rcstag is run) is
#       then assigned to the most recent revision of each checked out RCS
#       file.
#
#       A log message is requested from the user which is saved for future
#       references.
#
#       rcstag is based on rcsfreeze.
#
#       file names:
#       {RCS/}.rcstag.ver	version number
#       {RCS/}.rsctag.log	log messages, most recent first
##
usage ()
{
    sed '/^##/,/^##/!d;/^##/d;s/^# //g;s/^#$//g' $0
}

if [ x"$1" = x--help ] ; then usage ; exit 0 ; fi

PATH=/usr/local/bin:/bin:/usr/bin:/usr/ucb:$PATH
export PATH

DATE=`date -u +'%Y-%m-%d %T'` || exit
# Check whether we have an RCS subdirectory, so we can have the right
# prefix for our paths.
if test -d RCS
then RCSDIR=RCS/ EXT=
else RCSDIR= EXT=,v
fi

# Version number stuff, log message file
VERSIONFILE=${RCSDIR}.rcstag.ver
LOGFILE=${RCSDIR}.rcstag.log
# Initialize, rcstag never run before in the current directory
test -r $VERSIONFILE || { echo 0 >$VERSIONFILE && >>$LOGFILE; } || exit

# Get Version number, increase it, write back to file.
VERSIONNUMBER=`cat $VERSIONFILE` &&
VERSIONNUMBER=`expr $VERSIONNUMBER + 1` &&
echo $VERSIONNUMBER >$VERSIONFILE || exit

# Symbolic Revision Number
SYMREV=V_$VERSIONNUMBER
# Allow the user to give a meaningful symbolic name to the revision.
SYMREVNAME=${1-$SYMREV}
echo >&2 "rcstag: symbolic revision number computed: \"${SYMREV}\"
rcstag: symbolic revision number used:     \"${SYMREVNAME}\"
rcstag: the two differ only when rcstag invoked with argument
rcstag: give log message, summarizing changes (end with EOF or single '.')" \
	|| exit

# Stamp the logfile. Because we order the logfile the most recent
# first we will have to save everything right now in a temporary file.
TMPLOG=`mktemp -t` || exit
trap 'rm -f $TMPLOG; exit 1' 1 2 13 15
# Now ask for a log message, continuously add to the log file
(
	echo "Version: $SYMREVNAME($SYMREV), Date: $DATE
-----------" || exit
	while read MESS
	do
		case $MESS in
		.) break
		esac
		echo "	$MESS" || exit
	done
	echo "-----------
" &&
	cat $LOGFILE
) >$TMPLOG &&

# combine old and new logfiles
cp $TMPLOG $LOGFILE &&
rm -f $TMPLOG &&

# Now the real work begins by assigning a symbolic revision number
# to each checked out file. Take the most recent version on the default branch.

exec rcs -q -n$SYMREVNAME: $(find . -maxdepth 1 -type f)
